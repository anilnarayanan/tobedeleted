name: Apply

on:
  workflow_dispatch:
    inputs:
      user:
        description: "User"
        required: true

      token:
        description: "PAT"
        required: true

      use-emoji:
        type: boolean
        description: Include  emojis
      
      use-emoji1:
        type: boolean
        description: Include  emojis

      use-emoji2:
        type: boolean
        description: Include  emojis
      
      use-emoji3:
        type: boolean
        description: Include  emojis

      
      use-emoji4:
        type: boolean
        description: Include  emojis

      use-emoji5:
        type: boolean
        description: Include  emojis
      
      use-emoji6:
        type: boolean
        description: Include  emojis

      use-emoji7:
        type: boolean
        description: Include  emojis

      use-emoji8:
        type: boolean
        description: Include  emojis
      
      use-emoji9:
        type: boolean
        description: Include  emojis

      
      use-emoji10:
        type: boolean
        description: Include  emojis

      use-emoji11:
        type: boolean
        description: Include  emojis
      
      use-emoji12:
        type: boolean
        description: Include  emojis

jobs:
  Apply:
    timeout-minutes: 360
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2
      - name: For Azure platform
        id: git_repo_clone_status
        run: |
          git config --global url.https://${{ github.event.inputs.user }}:${{ github.event.inputs.token }}@github.kyndryl.net.insteadOf https://github.kyndryl.net

      - name: Initialize
        run: |
          export ARM_ACCESS_KEY="${{ github.event.inputs.az_storage_access_key }}"
          terraform init -var-file="variables.tfvars" -backend-config=backend.conf -backend-config="access_key=${{ github.event.inputs.az_storage_access_key }}"

      - name: Validate
        id: tr_validate_status
        if: success()
        env:
          status: ""
        run: |
          terraform validate -json
          TR_VALIDATE_STATUS=$(terraform validate -json)
          echo ::set-output name=TR_VALIDATE_STATUS::$TR_VALIDATE_STATUS

      - name: Plan & Apply
        if: contains(steps.tr_validate_status.outputs.TR_VALIDATE_STATUS, 'true')
        run: |
          export ARM_ACCESS_KEY="${{ github.event.inputs.az_storage_access_key }}"
          terraform plan -var-file="variables.tfvars" -out=plan.out
          #terraform show -json plan.out > plan.json
          #terraform import -var-file="variables.tfvars" azurerm_resource_group.azurerm_resource_group_rg-uspubcseclab-kcl-eastus-002 /subscriptions/19a7ed62-f51f-4e53-b3ea-6ba9a63f17fe/resourceGroups/rg-uspubcseclab-kcl-eastus-002
          terraform apply -var-file=variables.tfvars -auto-approve
          terraform show -json > plan.json

      - name: Upload terraform plan for user validation
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: plan-artifact
          path: plan.*
